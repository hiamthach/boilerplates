syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "health.proto";

option go_package = "github.com/hiamthach/boilerplates/go-microservices/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Golang Microservice Boilerplate";
    version: "0.0.1";
    contact: {
      name: "Golang Microservice Boilerplate";
      url: "";
      email: "dreon1008@gmail.com";
    };
  };
};

service MyService {
  rpc HealthCheck(PingReq) returns (PingResp) {
    option (google.api.http) = {
      get: "/";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to ping , check health system";
      summary: "check health system";
    };
  };
}
